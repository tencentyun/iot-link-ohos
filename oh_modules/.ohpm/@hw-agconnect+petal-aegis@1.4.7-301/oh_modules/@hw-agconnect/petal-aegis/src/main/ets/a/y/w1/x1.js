import huks from '@ohos.security.huks'; import { AegisError } from "../../s/t"; import { AegisErrorCode } from "../../s/u"; import { KeyInfoCenter } from "../z/k2"; export class HuksUtil { static async importKey(param) { let keyInfo = KeyInfoCenter.load(param.type); if (!keyInfo.optionsFunc) { throw new AegisError(AegisErrorCode.BAD_KEY_TYPE, 'load key options from key info failed'); } let keyOptions = keyInfo.optionsFunc(); keyOptions.inData = param.data; await huks.importKeyItem(param.alias, keyOptions); } static async importECDHWrappedKey(param, j4) { let keyInfo = KeyInfoCenter.load(param.type); if (!keyInfo.optionsFunc) { throw new AegisError(AegisErrorCode.BAD_KEY_TYPE, 'load key options from key info failed'); } let keyOptions = keyInfo.optionsFunc(); keyOptions.properties.push({ tag: huks.HuksTag.HUKS_TAG_UNWRAP_ALGORITHM_SUITE, value: huks.HuksUnwrapSuite.HUKS_UNWRAP_SUITE_ECDH_AES_256_GCM_NOPADDING }); keyOptions.inData = param.data; await huks.importWrappedKeyItem(param.alias, j4, keyOptions); } } 