import type { ICoder } from "../s1/t1"; import { DataReceiver } from "../h2"; import type { SignAlg } from "./p1"; export declare abstract class VerifyHandler extends DataReceiver { protected signAlg: SignAlg; constructor(l47: SignAlg); verify(signature: Uint8Array): Promise<boolean>; verifyWithCoder(signature: string, k47: ICoder): Promise<boolean>; verifyBase64(signature: string): Promise<boolean>; verifyBase64Url(signature: string): Promise<boolean>; verifyHex(signature: string): Promise<boolean>; protected prepare(): Promise<void>; protected abstract doVerify(signature: Uint8Array): Promise<boolean>; } 