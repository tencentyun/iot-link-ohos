import { Coder } from "../../../ets/a/b"; export class CipherUtil { static getCiphertextUint8Array(input, ivLen) { if (input instanceof Uint8Array) { let iv = input.subarray(0, ivLen); let s30 = input.subarray(ivLen + 1, input.length); return new Ciphertext(iv, s30); } else { let iv = Coder.HEX.decode(input.substring(0, ivLen * 2)); let r30 = Coder.HEX.decode(input.substring((ivLen * 2) + 1, input.length)); return new Ciphertext(iv, r30); } } static getKeyLen(q30) { if (q30 instanceof Uint8Array) { return q30.length; } else { return q30.length / 2; } } static getCipherText(o30, data) { let p30 = Coder.UTF8.decode(':'); let result = new Uint8Array(o30.length + data.length + p30.length); result.set(o30, 0); result.set(p30, o30.length); result.set(data, o30.length + p30.length); return result; } } CipherUtil.TAG = 'aegis CipherUtil'; export class Ciphertext { constructor(iv, text) { this.iv = iv; this.text = text; } } 