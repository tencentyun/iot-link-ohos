var __decorate = (this && this.k) || function (i8, target, key, desc) { var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d; if (typeof Reflect === "object" && typeof Reflect.m === "function") r = Reflect.m(i8, target, key, desc); else for (var j8 = i8.length - 1; j8 >= 0; j8--) if (d = i8[j8]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r; return c > 3 && r && Object.defineProperty(target, key, r), r; }; import { huksOptions } from "../w1/i2"; import { KeyType } from "../z/a1"; import { RegisterCenter } from "../j2"; import { SignAlg } from "./p1"; function aegisSignerInfo(e8) { return function (target, g8) { let h8 = target[`${g8}`]; SignerInfoCenter.register(h8, e8); }; } export class SignerInfoCenter { static register(c8, d8) { SignerInfoCenter.center.register(c8, d8); } static load(b8) { return SignerInfoCenter.center.load(b8); } } SignerInfoCenter.HMAC_SHA224 = SignAlg.HMAC_SHA224; SignerInfoCenter.HMAC_SHA256 = SignAlg.HMAC_SHA256; SignerInfoCenter.HMAC_SHA384 = SignAlg.HMAC_SHA384; SignerInfoCenter.HMAC_SHA512 = SignAlg.HMAC_SHA512; SignerInfoCenter.HMAC_SM3 = SignAlg.HMAC_SM3; SignerInfoCenter.RSA_PSS_SHA256_MGF1_SHA256 = SignAlg.RSA_PSS_SHA256_MGF1_SHA256; SignerInfoCenter.ECDSA_SHA256 = SignAlg.ECDSA_SHA256; SignerInfoCenter.SM2_256_SM3 = SignAlg.SM2_256_SM3; SignerInfoCenter.HUKS_ECDSA_SHA256 = SignAlg.HUKS_ECDSA_SHA256; SignerInfoCenter.HUKS_HMAC_SHA256 = SignAlg.HUKS_HMAC_SHA256; SignerInfoCenter.center = new RegisterCenter(); __decorate([ aegisSignerInfo({ algName: 'SHA224' }) ], SignerInfoCenter, "HMAC_SHA224", void 0); __decorate([ aegisSignerInfo({ algName: 'SHA256' }) ], SignerInfoCenter, "HMAC_SHA256", void 0); __decorate([ aegisSignerInfo({ algName: 'SHA384' }) ], SignerInfoCenter, "HMAC_SHA384", void 0); __decorate([ aegisSignerInfo({ algName: 'SHA512' }) ], SignerInfoCenter, "HMAC_SHA512", void 0); __decorate([ aegisSignerInfo({ algName: 'SM3' }) ], SignerInfoCenter, "HMAC_SM3", void 0); __decorate([ aegisSignerInfo({ algName: 'RSA3072|PSS|SHA256|MGF1_SHA256', keyType: KeyType.RSA_3072_PRIMES_2, nBits: 3072, pssSaltLen: 32 }) ], SignerInfoCenter, "RSA_PSS_SHA256_MGF1_SHA256", void 0); __decorate([ aegisSignerInfo({ algName: 'ECC256|SHA256', keyType: KeyType.ECC_256 }) ], SignerInfoCenter, "ECDSA_SHA256", void 0); __decorate([ aegisSignerInfo({ algName: 'SM2_256|SM3', keyType: KeyType.SM2_256 }) ], SignerInfoCenter, "SM2_256_SM3", void 0); __decorate([ aegisSignerInfo({ keyType: KeyType.HUKS_ECC_256, optionsFunc: huksOptions.getECC256Options }) ], SignerInfoCenter, "HUKS_ECDSA_SHA256", void 0); __decorate([ aegisSignerInfo({ keyType: KeyType.HUKS_HMAC_256 }) ], SignerInfoCenter, "HUKS_HMAC_SHA256", void 0); 