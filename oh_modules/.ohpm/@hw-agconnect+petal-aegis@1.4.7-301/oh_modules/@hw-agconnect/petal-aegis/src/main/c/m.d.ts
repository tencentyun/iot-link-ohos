export declare class AegHuks { private static TAG; private static IV_LEN; static ohAegHuksEncText(keyAlias: string, text: string | Uint8Array, iv?: string | Uint8Array): Promise<Uint8Array>; static ohAegHuksDecText(keyAlias: string, v43: string | Uint8Array): Promise<string>; static ohAegHuksEncTextHex(keyAlias: string, text: string | Uint8Array, iv?: string | Uint8Array): Promise<string>; static ohAegHuksDecTextHex(keyAlias: string, u43: string | Uint8Array): Promise<string>; static ohAegHuksEncHex(keyAlias: string, text: string | Uint8Array, iv?: string | Uint8Array): Promise<string>; static ohAegHuksEnc(keyAlias: string, text: string | Uint8Array, iv?: string | Uint8Array): Promise<Uint8Array>; static ohAegHuksDecHex(keyAlias: string, text: string | Uint8Array): Promise<string>; static ohAegHuksDec(keyAlias: string, text: string | Uint8Array): Promise<Uint8Array>; static ohAegHasHuksKey(keyAlias: string): Promise<boolean>; static ohAegDelHuksKey(keyAlias: string): Promise<boolean>; private static getUint8Array; private static getCiphertextUint8Array; } export declare class Ciphertext { iv: any; text: any; constructor(iv: any, text: any); } 