import cryptoFramework from '@ohos.security.cryptoFramework'; import { KeyConverter } from "./c1"; import { KeyType } from "./a1"; import { KeyInfoCenter } from "./k2"; export class KeyAgreement { static async create(z4, priKey, a5) { let keyInfo = KeyInfoCenter.load(z4); let b5 = cryptoFramework.createKeyAgreement(keyInfo.algName); let blob = await b5.generateSecret(priKey, a5); return blob.data; } static async createECC256(priKey, y4) { return await KeyAgreement.create(KeyType.ECC_256, priKey, y4); } static async createECC256FromBytes(v4, w4) { let x4 = await KeyConverter.fromKeyPair(KeyType.ECC_256, v4, w4); return await KeyAgreement.createECC256(x4.priKey, x4.pubKey); } } 