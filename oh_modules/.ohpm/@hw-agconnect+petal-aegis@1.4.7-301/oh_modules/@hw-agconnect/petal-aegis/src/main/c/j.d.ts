export declare class AegRsa { private static TAG; static ohAegGenerateRsaKeyPairBase64(): Promise<Rsa>; static ohAegGenerateRsaKeyPair(): Promise<Rsa>; static ohAegRsaEncText(text: string | Uint8Array, pubKey: string | Uint8Array): Promise<Uint8Array>; static ohAegRsaDecText(p43: string | Uint8Array, priKey: string | Uint8Array): Promise<string>; static ohAegRsaEncTextHex(text: string | Uint8Array, pubKey: string | Uint8Array): Promise<string>; static ohAegRsaDecTextHex(o43: string | Uint8Array, priKey: string | Uint8Array): Promise<string>; static ohAegRsaEncHex(text: string | Uint8Array, pubKey: string | Uint8Array): Promise<string>; static ohAegRsaEnc(text: string | Uint8Array, pubKey: string | Uint8Array): Promise<Uint8Array>; static ohAegRsaDecHex(text: string | Uint8Array, priKey: string | Uint8Array): Promise<string>; static ohAegRsaDec(text: string | Uint8Array, priKey: string | Uint8Array): Promise<Uint8Array>; private static getUint8Array; private static Base64ToUint8Array; } export declare class Rsa { publicKey: any; privateKey: any; constructor(publicKey: any, n43: any); } 