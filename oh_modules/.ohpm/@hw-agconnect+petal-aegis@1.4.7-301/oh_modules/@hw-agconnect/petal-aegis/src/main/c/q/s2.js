import { Coder } from "../../ets/a/b"; import { AegLogger } from "../c2/d2"; export function stringToHexString(str) { return Coder.HEX.encode(Coder.UTF8.decode(str)); } export function hexStringToString(str) { return Coder.HEX.decodeToString(str); } export function stringToUint8Array(str) { return Coder.UTF8.decode(str); } export function uint8ArrayToString(str) { return Coder.UTF8.encode(str); } export function uint8ArraytoHexString(str) { return Coder.HEX.encode(str); } export function hexStringToUint8Array(str) { return Coder.HEX.decode(str); } export function getStrOrUint8ToUint8(input) { try { let s40 = new Uint8Array(); if (input instanceof Uint8Array) { s40 = input; } else { s40 = stringToUint8Array(input); } return s40; } catch (err) { AegLogger.error('aegis getStrOrUint8ToUint8 fail, err code: ' + err.code + ', err msg: ' + err.message); } } export function getUint8Array(input) { if (input instanceof Uint8Array) { return input; } else { return Coder.HEX.decode(input); } } 