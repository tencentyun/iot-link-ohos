import cryptoFramework from '@ohos.security.cryptoFramework'; import { Cipher } from "../f1"; import type { CipherParamsSpec } from "../i1"; import { CipherAlg } from "../i1"; export declare class AESCipher extends Cipher { constructor(j45: CipherAlg, key: cryptoFramework.SymKey, k45: CipherParamsSpec); static builder(): AESCipherBuilder; } declare class AESCipherBuilder { private cipherAlg; private i; private keyAlias; private iv; private aad; private blockMaxSize; withCipherAlg(i45: CipherAlg): this; withKeyBytes(h45: Uint8Array): this; withKeyHex(g45: string): this; withKeyBase64(f45: string): this; withKeyAlias(keyAlias: string): this; withIv(iv: Uint8Array): this; withIvHex(e45: string): this; withAad(aad: Uint8Array): this; withAadHex(d45: string): this; withAadBase64(c45: string): this; withBlockMaxSize(b45: number): this; build(): Promise<Cipher>; } export {}; 