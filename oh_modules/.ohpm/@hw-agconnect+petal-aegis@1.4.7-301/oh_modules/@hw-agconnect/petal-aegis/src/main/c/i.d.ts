export declare class AegAesGcm { private static TAG; private static IV_LEN; static ohAegAesGcmEncText(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<Uint8Array>; static ohAegAesGcmDecText(m43: string | Uint8Array, key: string | Uint8Array): Promise<string>; static ohAegAesGcmEncTextHex(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<string>; static ohAegAesGcmDecTextHex(l43: string | Uint8Array, key: string | Uint8Array): Promise<string>; static ohAegAesGcmEncHex(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<string>; static ohAegAesGcmEnc(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<Uint8Array>; static ohAegAesGcmDecHex(text: string | Uint8Array, key: string | Uint8Array): Promise<string>; static ohAegAesGcmDec(text: string | Uint8Array, key: string | Uint8Array): Promise<Uint8Array>; private static getUint8Array; private static getCiphertextUint8Array; } export declare class Ciphertext { iv: any; text: any; constructor(iv: any, text: any); } 