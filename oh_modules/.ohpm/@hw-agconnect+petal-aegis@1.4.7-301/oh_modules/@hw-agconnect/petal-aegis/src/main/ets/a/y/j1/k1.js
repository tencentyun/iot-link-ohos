import cryptoFramework from '@ohos.security.cryptoFramework'; import { DataProcessor } from "../h2"; var MdAlg; (function (k6) { k6["SHA256"] = "SHA256"; k6["SHA384"] = "SHA384"; k6["SHA512"] = "SHA512"; k6["SM3"] = "SM3"; })(MdAlg || (MdAlg = {})); export class Md extends DataProcessor { constructor(j6) { super(); this.mdAlg = j6; } static SHA256() { return new Md(MdAlg.SHA256); } static SHA384() { return new Md(MdAlg.SHA384); } static SHA512() { return new Md(MdAlg.SHA512); } static SM3() { return new Md(MdAlg.SM3); } async to() { let md = cryptoFramework.createMd(this.mdAlg); for (let input of this.inputs) { await md.update({ data: input }); } this.clear(); return (await md.digest()).data; } } 