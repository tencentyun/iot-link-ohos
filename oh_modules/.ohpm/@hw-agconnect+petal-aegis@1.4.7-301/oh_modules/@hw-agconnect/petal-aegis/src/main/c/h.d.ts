export declare class AegAesCbc { private static TAG; private static IV_LEN; static ohAegAesCbcEncText(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<Uint8Array>; static ohAegAesCbcDecText(k43: string | Uint8Array, key: string | Uint8Array): Promise<string>; static ohAegAesCbcEncTextHex(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<string>; static ohAegAesCbcDecTextHex(j43: string | Uint8Array, key: string | Uint8Array): Promise<string>; static ohAegAesCbcEncHex(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<string>; static ohAegAesCbcEnc(text: string | Uint8Array, key: string | Uint8Array, iv?: string | Uint8Array): Promise<Uint8Array>; static ohAegAesCbcDecHex(text: string | Uint8Array, key: string | Uint8Array): Promise<string>; static ohAegAesCbcDec(text: string | Uint8Array, key: string | Uint8Array): Promise<Uint8Array>; private static getUint8Array; private static getCiphertextUint8Array; } export declare class CbcCiphertext { iv: any; text: any; constructor(iv: any, text: any); } 